# Generated by Django 5.0.6 on 2025-04-17 23:49

import django.db.models.deletion
import exercises.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DifficultyLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.IntegerField()),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to=exercises.models.exercise_file_path)),
                ('file_content_text', models.TextField(blank=True, help_text="Texte extrait du fichier PDF pour l'indexation et la recherche")),
                ('time_limit_minutes', models.PositiveIntegerField(default=60, help_text="Temps limite pour compléter l'exercice (en minutes)")),
                ('max_attempts', models.PositiveIntegerField(default=1, help_text='Nombre maximum de tentatives autorisées')),
                ('total_points', models.PositiveIntegerField(default=20, help_text='Nombre total de points pour cet exercice')),
                ('is_published', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_exercises', to=settings.AUTH_USER_MODEL)),
                ('difficulty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='exercises.difficultylevel')),
                ('topic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exercises', to='exercises.topic')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_deadline', models.DateTimeField(blank=True, null=True)),
                ('note_to_student', models.TextField(blank=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assignments', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_exercises', to=settings.AUTH_USER_MODEL)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='exercises.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(blank=True, help_text='Contenu textuel de la correction')),
                ('file', models.FileField(blank=True, help_text='Fichier PDF de la correction', null=True, upload_to=exercises.models.correction_file_path)),
                ('is_primary', models.BooleanField(default=False, help_text='Indique si cette correction est la référence principale')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_corrections', to=settings.AUTH_USER_MODEL)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corrections', to='exercises.exercise')),
            ],
            options={
                'unique_together': {('exercise', 'is_primary')},
            },
        ),
    ]
