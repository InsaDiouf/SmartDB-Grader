# Generated by Django 5.0.6 on 2025-04-17 23:49

import django.db.models.deletion
import submissions.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeedbackCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0.0, help_text='Note sur le total des points')),
                ('percentage', models.FloatField(default=0.0, help_text='Pourcentage de réussite (0-100)')),
                ('general_feedback', models.TextField(blank=True, help_text='Commentaire général sur la soumission')),
                ('detailed_feedback', models.JSONField(default=dict, help_text='Feedback détaillé (structure JSON)')),
                ('created_by_ai', models.BooleanField(default=True, help_text="Indique si l'évaluation a été générée par l'IA")),
                ('reviewed_by_teacher', models.BooleanField(default=False, help_text="Indique si l'évaluation a été revue par un professeur")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewing_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_evaluations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('feedback_type', models.CharField(choices=[('positive', 'Positif'), ('improvement', 'À améliorer'), ('error', 'Erreur'), ('suggestion', 'Suggestion')], default='improvement', max_length=20)),
                ('point_impact', models.FloatField(default=0.0, help_text='Impact positif ou négatif sur la note')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_items', to='submissions.feedbackcategory')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_items', to='submissions.evaluation')),
            ],
            options={
                'ordering': ['order', 'feedback_type'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=submissions.models.submission_file_path)),
                ('file_content_text', models.TextField(blank=True, help_text="Texte extrait du fichier PDF pour l'analyse par l'IA")),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Traitement terminé'), ('error', 'Erreur')], default='pending', max_length=20)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='exercises.exercise')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('exercise', 'student', 'attempt_number')},
            },
        ),
        migrations.AddField(
            model_name='evaluation',
            name='submission',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='submissions.submission'),
        ),
    ]
